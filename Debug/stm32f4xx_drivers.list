
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004c4  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000688  08000690  00010690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000688  08000688  00010690  2**0
                  CONTENTS
  4 .ARM          00000000  08000688  08000688  00010690  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000688  08000690  00010690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000688  08000688  00010688  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800068c  0800068c  0001068c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000690  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000690  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010690  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008b1  00000000  00000000  000106c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000223  00000000  00000000  00010f71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00011198  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011250  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001354  00000000  00000000  000112e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c10  00000000  00000000  00012634  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005247  00000000  00000000  00013244  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001848b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  000184e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000670 	.word	0x08000670

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000670 	.word	0x08000670

08000204 <Delay>:
#include <stdint.h>
#include "stm32f446xx.h"


void Delay(uint32_t delay)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	for(uint32_t i=0; i<delay; i++);
 800020c:	2300      	movs	r3, #0
 800020e:	60fb      	str	r3, [r7, #12]
 8000210:	e002      	b.n	8000218 <Delay+0x14>
 8000212:	68fb      	ldr	r3, [r7, #12]
 8000214:	3301      	adds	r3, #1
 8000216:	60fb      	str	r3, [r7, #12]
 8000218:	68fa      	ldr	r2, [r7, #12]
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	429a      	cmp	r2, r3
 800021e:	d3f8      	bcc.n	8000212 <Delay+0xe>
}
 8000220:	bf00      	nop
 8000222:	bf00      	nop
 8000224:	3714      	adds	r7, #20
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
	...

08000230 <main>:


int main (void){				// TESTE THIS FINCTION ON OSCILOSCOPE SEE UP
 8000230:	b580      	push	{r7, lr}
 8000232:	b084      	sub	sp, #16
 8000234:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOA;
 8000236:	4b0e      	ldr	r3, [pc, #56]	; (8000270 <main+0x40>)
 8000238:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800023a:	2305      	movs	r3, #5
 800023c:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800023e:	2301      	movs	r3, #1
 8000240:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OTYPER_PP;
 8000242:	2300      	movs	r3, #0
 8000244:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000246:	2302      	movs	r3, #2
 8000248:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 800024a:	2300      	movs	r3, #0
 800024c:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800024e:	2101      	movs	r1, #1
 8000250:	4807      	ldr	r0, [pc, #28]	; (8000270 <main+0x40>)
 8000252:	f000 f83b 	bl	80002cc <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000256:	1d3b      	adds	r3, r7, #4
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f907 	bl	800046c <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800025e:	2105      	movs	r1, #5
 8000260:	4803      	ldr	r0, [pc, #12]	; (8000270 <main+0x40>)
 8000262:	f000 f9cc 	bl	80005fe <GPIO_ToggleOutputPin>
		Delay(500000);
 8000266:	4803      	ldr	r0, [pc, #12]	; (8000274 <main+0x44>)
 8000268:	f7ff ffcc 	bl	8000204 <Delay>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800026c:	e7f7      	b.n	800025e <main+0x2e>
 800026e:	bf00      	nop
 8000270:	40020000 	.word	0x40020000
 8000274:	0007a120 	.word	0x0007a120

08000278 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000278:	480d      	ldr	r0, [pc, #52]	; (80002b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800027c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000280:	480c      	ldr	r0, [pc, #48]	; (80002b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000282:	490d      	ldr	r1, [pc, #52]	; (80002b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000284:	4a0d      	ldr	r2, [pc, #52]	; (80002bc <LoopForever+0xe>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000288:	e002      	b.n	8000290 <LoopCopyDataInit>

0800028a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800028c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028e:	3304      	adds	r3, #4

08000290 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000290:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000292:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000294:	d3f9      	bcc.n	800028a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000296:	4a0a      	ldr	r2, [pc, #40]	; (80002c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000298:	4c0a      	ldr	r4, [pc, #40]	; (80002c4 <LoopForever+0x16>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800029c:	e001      	b.n	80002a2 <LoopFillZerobss>

0800029e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a0:	3204      	adds	r2, #4

080002a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a4:	d3fb      	bcc.n	800029e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002a6:	f000 f9bf 	bl	8000628 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002aa:	f7ff ffc1 	bl	8000230 <main>

080002ae <LoopForever>:

LoopForever:
    b LoopForever
 80002ae:	e7fe      	b.n	80002ae <LoopForever>
  ldr   r0, =_estack
 80002b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002bc:	08000690 	.word	0x08000690
  ldr r2, =_sbss
 80002c0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c4:	2000001c 	.word	0x2000001c

080002c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c8:	e7fe      	b.n	80002c8 <ADC_IRQHandler>
	...

080002cc <GPIO_PeriClockControl>:
 * @param pGPIOx Pointer to a GPIO reg
 * @param ENorDI Enalbe or disable
 *
 * @return void.
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t ENorDI){
 80002cc:	b480      	push	{r7}
 80002ce:	b083      	sub	sp, #12
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
 80002d4:	460b      	mov	r3, r1
 80002d6:	70fb      	strb	r3, [r7, #3]
  
  if(ENorDI == ENABLE)
 80002d8:	78fb      	ldrb	r3, [r7, #3]
 80002da:	2b01      	cmp	r3, #1
 80002dc:	d157      	bne.n	800038e <GPIO_PeriClockControl+0xc2>
  {
    if(pGPIOx == GPIOA){
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a59      	ldr	r2, [pc, #356]	; (8000448 <GPIO_PeriClockControl+0x17c>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClockControl+0x28>
      GPIOA_PCLK_EN();
 80002e6:	4b59      	ldr	r3, [pc, #356]	; (800044c <GPIO_PeriClockControl+0x180>)
 80002e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ea:	4a58      	ldr	r2, [pc, #352]	; (800044c <GPIO_PeriClockControl+0x180>)
 80002ec:	f043 0301 	orr.w	r3, r3, #1
 80002f0:	6313      	str	r3, [r2, #48]	; 0x30
    }else if(pGPIOx == GPIOH){
      GPIOH_PCLK_DI();
    }    
  }
  
}
 80002f2:	e0a3      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOB){
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a56      	ldr	r2, [pc, #344]	; (8000450 <GPIO_PeriClockControl+0x184>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClockControl+0x3e>
      GPIOB_PCLK_EN();
 80002fc:	4b53      	ldr	r3, [pc, #332]	; (800044c <GPIO_PeriClockControl+0x180>)
 80002fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000300:	4a52      	ldr	r2, [pc, #328]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000302:	f043 0302 	orr.w	r3, r3, #2
 8000306:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000308:	e098      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOC){
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a51      	ldr	r2, [pc, #324]	; (8000454 <GPIO_PeriClockControl+0x188>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x54>
      GPIOC_PCLK_EN();
 8000312:	4b4e      	ldr	r3, [pc, #312]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000316:	4a4d      	ldr	r2, [pc, #308]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000318:	f043 0304 	orr.w	r3, r3, #4
 800031c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031e:	e08d      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOD){
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a4d      	ldr	r2, [pc, #308]	; (8000458 <GPIO_PeriClockControl+0x18c>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PeriClockControl+0x6a>
      GPIOD_PCLK_EN();
 8000328:	4b48      	ldr	r3, [pc, #288]	; (800044c <GPIO_PeriClockControl+0x180>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032c:	4a47      	ldr	r2, [pc, #284]	; (800044c <GPIO_PeriClockControl+0x180>)
 800032e:	f043 0308 	orr.w	r3, r3, #8
 8000332:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000334:	e082      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOE){
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a48      	ldr	r2, [pc, #288]	; (800045c <GPIO_PeriClockControl+0x190>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PeriClockControl+0x80>
      GPIOE_PCLK_EN();
 800033e:	4b43      	ldr	r3, [pc, #268]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000342:	4a42      	ldr	r2, [pc, #264]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000344:	f043 0310 	orr.w	r3, r3, #16
 8000348:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034a:	e077      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOF){
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a44      	ldr	r2, [pc, #272]	; (8000460 <GPIO_PeriClockControl+0x194>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PeriClockControl+0x96>
      GPIOF_PCLK_EN();
 8000354:	4b3d      	ldr	r3, [pc, #244]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000358:	4a3c      	ldr	r2, [pc, #240]	; (800044c <GPIO_PeriClockControl+0x180>)
 800035a:	f043 0320 	orr.w	r3, r3, #32
 800035e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000360:	e06c      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOG){
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a3f      	ldr	r2, [pc, #252]	; (8000464 <GPIO_PeriClockControl+0x198>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClockControl+0xac>
      GPIOG_PCLK_EN();
 800036a:	4b38      	ldr	r3, [pc, #224]	; (800044c <GPIO_PeriClockControl+0x180>)
 800036c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036e:	4a37      	ldr	r2, [pc, #220]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000370:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000374:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000376:	e061      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOH){
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a3b      	ldr	r2, [pc, #236]	; (8000468 <GPIO_PeriClockControl+0x19c>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d15d      	bne.n	800043c <GPIO_PeriClockControl+0x170>
      GPIOH_PCLK_EN();
 8000380:	4b32      	ldr	r3, [pc, #200]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000384:	4a31      	ldr	r2, [pc, #196]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000386:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800038a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038c:	e056      	b.n	800043c <GPIO_PeriClockControl+0x170>
    if(pGPIOx == GPIOA){
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a2d      	ldr	r2, [pc, #180]	; (8000448 <GPIO_PeriClockControl+0x17c>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_PeriClockControl+0xd8>
      GPIOA_PCLK_DI();
 8000396:	4b2d      	ldr	r3, [pc, #180]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039a:	4a2c      	ldr	r2, [pc, #176]	; (800044c <GPIO_PeriClockControl+0x180>)
 800039c:	f023 0301 	bic.w	r3, r3, #1
 80003a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a2:	e04b      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOB){
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a2a      	ldr	r2, [pc, #168]	; (8000450 <GPIO_PeriClockControl+0x184>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <GPIO_PeriClockControl+0xee>
      GPIOB_PCLK_DI();
 80003ac:	4b27      	ldr	r3, [pc, #156]	; (800044c <GPIO_PeriClockControl+0x180>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b0:	4a26      	ldr	r2, [pc, #152]	; (800044c <GPIO_PeriClockControl+0x180>)
 80003b2:	f023 0302 	bic.w	r3, r3, #2
 80003b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b8:	e040      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOC){
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a25      	ldr	r2, [pc, #148]	; (8000454 <GPIO_PeriClockControl+0x188>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <GPIO_PeriClockControl+0x104>
      GPIOC_PCLK_DI();
 80003c2:	4b22      	ldr	r3, [pc, #136]	; (800044c <GPIO_PeriClockControl+0x180>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c6:	4a21      	ldr	r2, [pc, #132]	; (800044c <GPIO_PeriClockControl+0x180>)
 80003c8:	f023 0304 	bic.w	r3, r3, #4
 80003cc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ce:	e035      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOD){
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a21      	ldr	r2, [pc, #132]	; (8000458 <GPIO_PeriClockControl+0x18c>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d106      	bne.n	80003e6 <GPIO_PeriClockControl+0x11a>
      GPIOD_PCLK_DI();
 80003d8:	4b1c      	ldr	r3, [pc, #112]	; (800044c <GPIO_PeriClockControl+0x180>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003dc:	4a1b      	ldr	r2, [pc, #108]	; (800044c <GPIO_PeriClockControl+0x180>)
 80003de:	f023 0308 	bic.w	r3, r3, #8
 80003e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e4:	e02a      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOE){
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a1c      	ldr	r2, [pc, #112]	; (800045c <GPIO_PeriClockControl+0x190>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d106      	bne.n	80003fc <GPIO_PeriClockControl+0x130>
      GPIOE_PCLK_DI();
 80003ee:	4b17      	ldr	r3, [pc, #92]	; (800044c <GPIO_PeriClockControl+0x180>)
 80003f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f2:	4a16      	ldr	r2, [pc, #88]	; (800044c <GPIO_PeriClockControl+0x180>)
 80003f4:	f023 0310 	bic.w	r3, r3, #16
 80003f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fa:	e01f      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOF){
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a18      	ldr	r2, [pc, #96]	; (8000460 <GPIO_PeriClockControl+0x194>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d106      	bne.n	8000412 <GPIO_PeriClockControl+0x146>
      GPIOF_PCLK_DI();
 8000404:	4b11      	ldr	r3, [pc, #68]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000408:	4a10      	ldr	r2, [pc, #64]	; (800044c <GPIO_PeriClockControl+0x180>)
 800040a:	f023 0320 	bic.w	r3, r3, #32
 800040e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000410:	e014      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOG){
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a13      	ldr	r2, [pc, #76]	; (8000464 <GPIO_PeriClockControl+0x198>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d106      	bne.n	8000428 <GPIO_PeriClockControl+0x15c>
      GPIOG_PCLK_DI();
 800041a:	4b0c      	ldr	r3, [pc, #48]	; (800044c <GPIO_PeriClockControl+0x180>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a0b      	ldr	r2, [pc, #44]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000420:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000426:	e009      	b.n	800043c <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOH){
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a0f      	ldr	r2, [pc, #60]	; (8000468 <GPIO_PeriClockControl+0x19c>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d105      	bne.n	800043c <GPIO_PeriClockControl+0x170>
      GPIOH_PCLK_DI();
 8000430:	4b06      	ldr	r3, [pc, #24]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000434:	4a05      	ldr	r2, [pc, #20]	; (800044c <GPIO_PeriClockControl+0x180>)
 8000436:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800043a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043c:	bf00      	nop
 800043e:	370c      	adds	r7, #12
 8000440:	46bd      	mov	sp, r7
 8000442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000446:	4770      	bx	lr
 8000448:	40020000 	.word	0x40020000
 800044c:	40023800 	.word	0x40023800
 8000450:	40020400 	.word	0x40020400
 8000454:	40020800 	.word	0x40020800
 8000458:	40020c00 	.word	0x40020c00
 800045c:	40021000 	.word	0x40021000
 8000460:	40021400 	.word	0x40021400
 8000464:	40021800 	.word	0x40021800
 8000468:	40021c00 	.word	0x40021c00

0800046c <GPIO_Init>:
 * @param *pGPIOHandle Pointer to GPIO handle
 *
 * @return void.
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800046c:	b480      	push	{r7}
 800046e:	b085      	sub	sp, #20
 8000470:	af00      	add	r7, sp, #0
 8000472:	6078      	str	r0, [r7, #4]
  uint32_t temp = 0; // temp register
 8000474:	2300      	movs	r3, #0
 8000476:	60fb      	str	r3, [r7, #12]
  
  //1. configure Gpio pin Mode
  if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	795b      	ldrb	r3, [r3, #5]
 800047c:	2b03      	cmp	r3, #3
 800047e:	d81e      	bhi.n	80004be <GPIO_Init+0x52>
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	795b      	ldrb	r3, [r3, #5]
 8000484:	461a      	mov	r2, r3
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	791b      	ldrb	r3, [r3, #4]
 800048a:	005b      	lsls	r3, r3, #1
 800048c:	fa02 f303 	lsl.w	r3, r2, r3
 8000490:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	681a      	ldr	r2, [r3, #0]
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	791b      	ldrb	r3, [r3, #4]
 800049c:	4619      	mov	r1, r3
 800049e:	2303      	movs	r3, #3
 80004a0:	408b      	lsls	r3, r1
 80004a2:	43db      	mvns	r3, r3
 80004a4:	4619      	mov	r1, r3
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	400a      	ands	r2, r1
 80004ac:	601a      	str	r2, [r3, #0]
    pGPIOHandle->pGPIOx->MODER |= temp; //setting
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	681b      	ldr	r3, [r3, #0]
 80004b2:	6819      	ldr	r1, [r3, #0]
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	68fa      	ldr	r2, [r7, #12]
 80004ba:	430a      	orrs	r2, r1
 80004bc:	601a      	str	r2, [r3, #0]
  else {
    // for interrupts
  }
  
  //2. configure speed
  temp = 0;
 80004be:	2300      	movs	r3, #0
 80004c0:	60fb      	str	r3, [r7, #12]
  temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	799b      	ldrb	r3, [r3, #6]
 80004c6:	461a      	mov	r2, r3
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	791b      	ldrb	r3, [r3, #4]
 80004cc:	005b      	lsls	r3, r3, #1
 80004ce:	fa02 f303 	lsl.w	r3, r2, r3
 80004d2:	60fb      	str	r3, [r7, #12]
  pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	689a      	ldr	r2, [r3, #8]
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	791b      	ldrb	r3, [r3, #4]
 80004de:	4619      	mov	r1, r3
 80004e0:	2303      	movs	r3, #3
 80004e2:	408b      	lsls	r3, r1
 80004e4:	43db      	mvns	r3, r3
 80004e6:	4619      	mov	r1, r3
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	400a      	ands	r2, r1
 80004ee:	609a      	str	r2, [r3, #8]
  pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	6899      	ldr	r1, [r3, #8]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	68fa      	ldr	r2, [r7, #12]
 80004fc:	430a      	orrs	r2, r1
 80004fe:	609a      	str	r2, [r3, #8]
  
  //3. configure popup popdown setting
  temp = 0;
 8000500:	2300      	movs	r3, #0
 8000502:	60fb      	str	r3, [r7, #12]
  temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	79db      	ldrb	r3, [r3, #7]
 8000508:	461a      	mov	r2, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	005b      	lsls	r3, r3, #1
 8000510:	fa02 f303 	lsl.w	r3, r2, r3
 8000514:	60fb      	str	r3, [r7, #12]
  pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);  
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	68da      	ldr	r2, [r3, #12]
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	791b      	ldrb	r3, [r3, #4]
 8000520:	4619      	mov	r1, r3
 8000522:	2303      	movs	r3, #3
 8000524:	408b      	lsls	r3, r1
 8000526:	43db      	mvns	r3, r3
 8000528:	4619      	mov	r1, r3
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	400a      	ands	r2, r1
 8000530:	60da      	str	r2, [r3, #12]
  pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	68d9      	ldr	r1, [r3, #12]
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	68fa      	ldr	r2, [r7, #12]
 800053e:	430a      	orrs	r2, r1
 8000540:	60da      	str	r2, [r3, #12]
    
  //4. configure optype
  temp = 0;
 8000542:	2300      	movs	r3, #0
 8000544:	60fb      	str	r3, [r7, #12]
  temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	7a1b      	ldrb	r3, [r3, #8]
 800054a:	461a      	mov	r2, r3
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	fa02 f303 	lsl.w	r3, r2, r3
 8000554:	60fb      	str	r3, [r7, #12]
  pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	685a      	ldr	r2, [r3, #4]
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	791b      	ldrb	r3, [r3, #4]
 8000560:	4619      	mov	r1, r3
 8000562:	2301      	movs	r3, #1
 8000564:	408b      	lsls	r3, r1
 8000566:	43db      	mvns	r3, r3
 8000568:	4619      	mov	r1, r3
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	400a      	ands	r2, r1
 8000570:	605a      	str	r2, [r3, #4]
  pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	681b      	ldr	r3, [r3, #0]
 8000576:	6859      	ldr	r1, [r3, #4]
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	68fa      	ldr	r2, [r7, #12]
 800057e:	430a      	orrs	r2, r1
 8000580:	605a      	str	r2, [r3, #4]
  
  //5. configure alternate functionality
  temp = 0;
 8000582:	2300      	movs	r3, #0
 8000584:	60fb      	str	r3, [r7, #12]
  if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ALTFN)
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	795b      	ldrb	r3, [r3, #5]
 800058a:	2b02      	cmp	r3, #2
 800058c:	d831      	bhi.n	80005f2 <GPIO_Init+0x186>
  {
    uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	08db      	lsrs	r3, r3, #3
 8000594:	72fb      	strb	r3, [r7, #11]
    uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	f003 0307 	and.w	r3, r3, #7
 800059e:	72bb      	strb	r3, [r7, #10]
    pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	7afa      	ldrb	r2, [r7, #11]
 80005a6:	3208      	adds	r2, #8
 80005a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005ac:	7abb      	ldrb	r3, [r7, #10]
 80005ae:	009b      	lsls	r3, r3, #2
 80005b0:	220f      	movs	r2, #15
 80005b2:	fa02 f303 	lsl.w	r3, r2, r3
 80005b6:	43db      	mvns	r3, r3
 80005b8:	4618      	mov	r0, r3
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	7afa      	ldrb	r2, [r7, #11]
 80005c0:	4001      	ands	r1, r0
 80005c2:	3208      	adds	r2, #8
 80005c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2) );
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	7afa      	ldrb	r2, [r7, #11]
 80005ce:	3208      	adds	r2, #8
 80005d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	7a5b      	ldrb	r3, [r3, #9]
 80005d8:	461a      	mov	r2, r3
 80005da:	7abb      	ldrb	r3, [r7, #10]
 80005dc:	009b      	lsls	r3, r3, #2
 80005de:	fa02 f303 	lsl.w	r3, r2, r3
 80005e2:	4618      	mov	r0, r3
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	7afa      	ldrb	r2, [r7, #11]
 80005ea:	4301      	orrs	r1, r0
 80005ec:	3208      	adds	r2, #8
 80005ee:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  }
}
 80005f2:	bf00      	nop
 80005f4:	3714      	adds	r7, #20
 80005f6:	46bd      	mov	sp, r7
 80005f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005fc:	4770      	bx	lr

080005fe <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t value){

	pGPIOx->ODR = value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80005fe:	b480      	push	{r7}
 8000600:	b083      	sub	sp, #12
 8000602:	af00      	add	r7, sp, #0
 8000604:	6078      	str	r0, [r7, #4]
 8000606:	460b      	mov	r3, r1
 8000608:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1 << PinNumber);
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	695b      	ldr	r3, [r3, #20]
 800060e:	78fa      	ldrb	r2, [r7, #3]
 8000610:	2101      	movs	r1, #1
 8000612:	fa01 f202 	lsl.w	r2, r1, r2
 8000616:	405a      	eors	r2, r3
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	615a      	str	r2, [r3, #20]
}
 800061c:	bf00      	nop
 800061e:	370c      	adds	r7, #12
 8000620:	46bd      	mov	sp, r7
 8000622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000626:	4770      	bx	lr

08000628 <__libc_init_array>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	4d0d      	ldr	r5, [pc, #52]	; (8000660 <__libc_init_array+0x38>)
 800062c:	4c0d      	ldr	r4, [pc, #52]	; (8000664 <__libc_init_array+0x3c>)
 800062e:	1b64      	subs	r4, r4, r5
 8000630:	10a4      	asrs	r4, r4, #2
 8000632:	2600      	movs	r6, #0
 8000634:	42a6      	cmp	r6, r4
 8000636:	d109      	bne.n	800064c <__libc_init_array+0x24>
 8000638:	4d0b      	ldr	r5, [pc, #44]	; (8000668 <__libc_init_array+0x40>)
 800063a:	4c0c      	ldr	r4, [pc, #48]	; (800066c <__libc_init_array+0x44>)
 800063c:	f000 f818 	bl	8000670 <_init>
 8000640:	1b64      	subs	r4, r4, r5
 8000642:	10a4      	asrs	r4, r4, #2
 8000644:	2600      	movs	r6, #0
 8000646:	42a6      	cmp	r6, r4
 8000648:	d105      	bne.n	8000656 <__libc_init_array+0x2e>
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000650:	4798      	blx	r3
 8000652:	3601      	adds	r6, #1
 8000654:	e7ee      	b.n	8000634 <__libc_init_array+0xc>
 8000656:	f855 3b04 	ldr.w	r3, [r5], #4
 800065a:	4798      	blx	r3
 800065c:	3601      	adds	r6, #1
 800065e:	e7f2      	b.n	8000646 <__libc_init_array+0x1e>
 8000660:	08000688 	.word	0x08000688
 8000664:	08000688 	.word	0x08000688
 8000668:	08000688 	.word	0x08000688
 800066c:	0800068c 	.word	0x0800068c

08000670 <_init>:
 8000670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000672:	bf00      	nop
 8000674:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000676:	bc08      	pop	{r3}
 8000678:	469e      	mov	lr, r3
 800067a:	4770      	bx	lr

0800067c <_fini>:
 800067c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067e:	bf00      	nop
 8000680:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000682:	bc08      	pop	{r3}
 8000684:	469e      	mov	lr, r3
 8000686:	4770      	bx	lr
