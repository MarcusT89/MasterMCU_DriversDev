
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000830  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009f4  080009fc  000109fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009f4  080009f4  000109fc  2**0
                  CONTENTS
  4 .ARM          00000000  080009f4  080009f4  000109fc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009f4  080009fc  000109fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009f4  080009f4  000109f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009f8  080009f8  000109f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080009fc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080009fc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000109fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000130a  00000000  00000000  00010a2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000365  00000000  00000000  00011d36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000120a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00012168  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001ea6  00000000  00000000  00012208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000fbd  00000000  00000000  000140ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008bb2  00000000  00000000  0001506b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001dc1d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001dc70  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080009dc 	.word	0x080009dc

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080009dc 	.word	0x080009dc

08000204 <main>:
{
	for(uint32_t i=0; i<delay; i++);
}


int main (void){				// TESTE THIS FINCTION ON OSCILOSCOPE SEE UP
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed;
	GPIO_Handle_t GpioButton;

	memset(&GpioLed,0,sizeof(GpioLed));
 800020a:	f107 030c 	add.w	r3, r7, #12
 800020e:	220c      	movs	r2, #12
 8000210:	2100      	movs	r1, #0
 8000212:	4618      	mov	r0, r3
 8000214:	f000 fbda 	bl	80009cc <memset>
	memset(&GpioButton,0,sizeof(GpioButton));
 8000218:	463b      	mov	r3, r7
 800021a:	220c      	movs	r2, #12
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f000 fbd4 	bl	80009cc <memset>

	// internal LED config
	GpioLed.pGPIOx = GPIOA;
 8000224:	4b15      	ldr	r3, [pc, #84]	; (800027c <main+0x78>)
 8000226:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
 8000228:	2306      	movs	r3, #6
 800022a:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022c:	2301      	movs	r3, #1
 800022e:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OTYPER_PP;
 8000230:	2300      	movs	r3, #0
 8000232:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000234:	2302      	movs	r3, #2
 8000236:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	74fb      	strb	r3, [r7, #19]

	// External button config
	GpioButton.pGPIOx = GPIOA;
 800023c:	4b0f      	ldr	r3, [pc, #60]	; (800027c <main+0x78>)
 800023e:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 8000240:	2308      	movs	r3, #8
 8000242:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000244:	2304      	movs	r3, #4
 8000246:	717b      	strb	r3, [r7, #5]
	//GpioButton.GPIO_PinConfig.GPIO_PinOPType = GPIO_OTYPER_PP;
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000248:	2302      	movs	r3, #2
 800024a:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU; // --> activate internal pull up if not installed externally
 800024c:	2301      	movs	r3, #1
 800024e:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000250:	2101      	movs	r1, #1
 8000252:	480a      	ldr	r0, [pc, #40]	; (800027c <main+0x78>)
 8000254:	f000 f84c 	bl	80002f0 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000258:	f107 030c 	add.w	r3, r7, #12
 800025c:	4618      	mov	r0, r3
 800025e:	f000 f917 	bl	8000490 <GPIO_Init>
	GPIO_Init(&GpioButton);
 8000262:	463b      	mov	r3, r7
 8000264:	4618      	mov	r0, r3
 8000266:	f000 f913 	bl	8000490 <GPIO_Init>

	// IRQ config
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5, NVIC_IRQ_PRI15);
 800026a:	210f      	movs	r1, #15
 800026c:	2017      	movs	r0, #23
 800026e:	f000 fb3f 	bl	80008f0 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5, ENABLE);
 8000272:	2101      	movs	r1, #1
 8000274:	2017      	movs	r0, #23
 8000276:	f000 fab5 	bl	80007e4 <GPIO_IRQInterruptConfig>

	while (1);
 800027a:	e7fe      	b.n	800027a <main+0x76>
 800027c:	40020000 	.word	0x40020000

08000280 <EXTI9_5_IRQHandler>:

}

void EXTI9_5_IRQHandler(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_8);
 8000284:	2008      	movs	r0, #8
 8000286:	f000 fb5d 	bl	8000944 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_6);
 800028a:	2106      	movs	r1, #6
 800028c:	4802      	ldr	r0, [pc, #8]	; (8000298 <EXTI9_5_IRQHandler+0x18>)
 800028e:	f000 fa93 	bl	80007b8 <GPIO_ToggleOutputPin>
}
 8000292:	bf00      	nop
 8000294:	bd80      	pop	{r7, pc}
 8000296:	bf00      	nop
 8000298:	40020000 	.word	0x40020000

0800029c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800029c:	480d      	ldr	r0, [pc, #52]	; (80002d4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002a0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a4:	480c      	ldr	r0, [pc, #48]	; (80002d8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a6:	490d      	ldr	r1, [pc, #52]	; (80002dc <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a8:	4a0d      	ldr	r2, [pc, #52]	; (80002e0 <LoopForever+0xe>)
  movs r3, #0
 80002aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ac:	e002      	b.n	80002b4 <LoopCopyDataInit>

080002ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b2:	3304      	adds	r3, #4

080002b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b8:	d3f9      	bcc.n	80002ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ba:	4a0a      	ldr	r2, [pc, #40]	; (80002e4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002bc:	4c0a      	ldr	r4, [pc, #40]	; (80002e8 <LoopForever+0x16>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c0:	e001      	b.n	80002c6 <LoopFillZerobss>

080002c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c4:	3204      	adds	r2, #4

080002c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c8:	d3fb      	bcc.n	80002c2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ca:	f000 fb5b 	bl	8000984 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ce:	f7ff ff99 	bl	8000204 <main>

080002d2 <LoopForever>:

LoopForever:
    b LoopForever
 80002d2:	e7fe      	b.n	80002d2 <LoopForever>
  ldr   r0, =_estack
 80002d4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002d8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002dc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e0:	080009fc 	.word	0x080009fc
  ldr r2, =_sbss
 80002e4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e8:	2000001c 	.word	0x2000001c

080002ec <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002ec:	e7fe      	b.n	80002ec <ADC_IRQHandler>
	...

080002f0 <GPIO_PeriClockControl>:
 * @param pGPIOx Pointer to a GPIO reg
 * @param ENorDI Enalbe or disable
 *
 * @return void.
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t ENorDI){
 80002f0:	b480      	push	{r7}
 80002f2:	b083      	sub	sp, #12
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
 80002f8:	460b      	mov	r3, r1
 80002fa:	70fb      	strb	r3, [r7, #3]
  
  if(ENorDI == ENABLE)
 80002fc:	78fb      	ldrb	r3, [r7, #3]
 80002fe:	2b01      	cmp	r3, #1
 8000300:	d157      	bne.n	80003b2 <GPIO_PeriClockControl+0xc2>
  {
    if(pGPIOx == GPIOA){
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a59      	ldr	r2, [pc, #356]	; (800046c <GPIO_PeriClockControl+0x17c>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x28>
      GPIOA_PCLK_EN();
 800030a:	4b59      	ldr	r3, [pc, #356]	; (8000470 <GPIO_PeriClockControl+0x180>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a58      	ldr	r2, [pc, #352]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000310:	f043 0301 	orr.w	r3, r3, #1
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
    }else if(pGPIOx == GPIOH){
      GPIOH_PCLK_DI();
    }    
  }
  
}
 8000316:	e0a3      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOB){
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a56      	ldr	r2, [pc, #344]	; (8000474 <GPIO_PeriClockControl+0x184>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x3e>
      GPIOB_PCLK_EN();
 8000320:	4b53      	ldr	r3, [pc, #332]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a52      	ldr	r2, [pc, #328]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000326:	f043 0302 	orr.w	r3, r3, #2
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e098      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOC){
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a51      	ldr	r2, [pc, #324]	; (8000478 <GPIO_PeriClockControl+0x188>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x54>
      GPIOC_PCLK_EN();
 8000336:	4b4e      	ldr	r3, [pc, #312]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a4d      	ldr	r2, [pc, #308]	; (8000470 <GPIO_PeriClockControl+0x180>)
 800033c:	f043 0304 	orr.w	r3, r3, #4
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e08d      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOD){
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a4d      	ldr	r2, [pc, #308]	; (800047c <GPIO_PeriClockControl+0x18c>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0x6a>
      GPIOD_PCLK_EN();
 800034c:	4b48      	ldr	r3, [pc, #288]	; (8000470 <GPIO_PeriClockControl+0x180>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a47      	ldr	r2, [pc, #284]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000352:	f043 0308 	orr.w	r3, r3, #8
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e082      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOE){
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a48      	ldr	r2, [pc, #288]	; (8000480 <GPIO_PeriClockControl+0x190>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0x80>
      GPIOE_PCLK_EN();
 8000362:	4b43      	ldr	r3, [pc, #268]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a42      	ldr	r2, [pc, #264]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000368:	f043 0310 	orr.w	r3, r3, #16
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e077      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOF){
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a44      	ldr	r2, [pc, #272]	; (8000484 <GPIO_PeriClockControl+0x194>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d106      	bne.n	8000386 <GPIO_PeriClockControl+0x96>
      GPIOF_PCLK_EN();
 8000378:	4b3d      	ldr	r3, [pc, #244]	; (8000470 <GPIO_PeriClockControl+0x180>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a3c      	ldr	r2, [pc, #240]	; (8000470 <GPIO_PeriClockControl+0x180>)
 800037e:	f043 0320 	orr.w	r3, r3, #32
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	e06c      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOG){
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a3f      	ldr	r2, [pc, #252]	; (8000488 <GPIO_PeriClockControl+0x198>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d106      	bne.n	800039c <GPIO_PeriClockControl+0xac>
      GPIOG_PCLK_EN();
 800038e:	4b38      	ldr	r3, [pc, #224]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000392:	4a37      	ldr	r2, [pc, #220]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000394:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000398:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039a:	e061      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOH){
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a3b      	ldr	r2, [pc, #236]	; (800048c <GPIO_PeriClockControl+0x19c>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d15d      	bne.n	8000460 <GPIO_PeriClockControl+0x170>
      GPIOH_PCLK_EN();
 80003a4:	4b32      	ldr	r3, [pc, #200]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a8:	4a31      	ldr	r2, [pc, #196]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003aa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b0:	e056      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    if(pGPIOx == GPIOA){
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a2d      	ldr	r2, [pc, #180]	; (800046c <GPIO_PeriClockControl+0x17c>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d106      	bne.n	80003c8 <GPIO_PeriClockControl+0xd8>
      GPIOA_PCLK_DI();
 80003ba:	4b2d      	ldr	r3, [pc, #180]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003be:	4a2c      	ldr	r2, [pc, #176]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003c0:	f023 0301 	bic.w	r3, r3, #1
 80003c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c6:	e04b      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOB){
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a2a      	ldr	r2, [pc, #168]	; (8000474 <GPIO_PeriClockControl+0x184>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d106      	bne.n	80003de <GPIO_PeriClockControl+0xee>
      GPIOB_PCLK_DI();
 80003d0:	4b27      	ldr	r3, [pc, #156]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d4:	4a26      	ldr	r2, [pc, #152]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003d6:	f023 0302 	bic.w	r3, r3, #2
 80003da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003dc:	e040      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOC){
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4a25      	ldr	r2, [pc, #148]	; (8000478 <GPIO_PeriClockControl+0x188>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d106      	bne.n	80003f4 <GPIO_PeriClockControl+0x104>
      GPIOC_PCLK_DI();
 80003e6:	4b22      	ldr	r3, [pc, #136]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ea:	4a21      	ldr	r2, [pc, #132]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003ec:	f023 0304 	bic.w	r3, r3, #4
 80003f0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f2:	e035      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOD){
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a21      	ldr	r2, [pc, #132]	; (800047c <GPIO_PeriClockControl+0x18c>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d106      	bne.n	800040a <GPIO_PeriClockControl+0x11a>
      GPIOD_PCLK_DI();
 80003fc:	4b1c      	ldr	r3, [pc, #112]	; (8000470 <GPIO_PeriClockControl+0x180>)
 80003fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000400:	4a1b      	ldr	r2, [pc, #108]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000402:	f023 0308 	bic.w	r3, r3, #8
 8000406:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000408:	e02a      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOE){
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4a1c      	ldr	r2, [pc, #112]	; (8000480 <GPIO_PeriClockControl+0x190>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d106      	bne.n	8000420 <GPIO_PeriClockControl+0x130>
      GPIOE_PCLK_DI();
 8000412:	4b17      	ldr	r3, [pc, #92]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000414:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000416:	4a16      	ldr	r2, [pc, #88]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000418:	f023 0310 	bic.w	r3, r3, #16
 800041c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041e:	e01f      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOF){
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	4a18      	ldr	r2, [pc, #96]	; (8000484 <GPIO_PeriClockControl+0x194>)
 8000424:	4293      	cmp	r3, r2
 8000426:	d106      	bne.n	8000436 <GPIO_PeriClockControl+0x146>
      GPIOF_PCLK_DI();
 8000428:	4b11      	ldr	r3, [pc, #68]	; (8000470 <GPIO_PeriClockControl+0x180>)
 800042a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042c:	4a10      	ldr	r2, [pc, #64]	; (8000470 <GPIO_PeriClockControl+0x180>)
 800042e:	f023 0320 	bic.w	r3, r3, #32
 8000432:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000434:	e014      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOG){
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4a13      	ldr	r2, [pc, #76]	; (8000488 <GPIO_PeriClockControl+0x198>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d106      	bne.n	800044c <GPIO_PeriClockControl+0x15c>
      GPIOG_PCLK_DI();
 800043e:	4b0c      	ldr	r3, [pc, #48]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000442:	4a0b      	ldr	r2, [pc, #44]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000444:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000448:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044a:	e009      	b.n	8000460 <GPIO_PeriClockControl+0x170>
    }else if(pGPIOx == GPIOH){
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a0f      	ldr	r2, [pc, #60]	; (800048c <GPIO_PeriClockControl+0x19c>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d105      	bne.n	8000460 <GPIO_PeriClockControl+0x170>
      GPIOH_PCLK_DI();
 8000454:	4b06      	ldr	r3, [pc, #24]	; (8000470 <GPIO_PeriClockControl+0x180>)
 8000456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000458:	4a05      	ldr	r2, [pc, #20]	; (8000470 <GPIO_PeriClockControl+0x180>)
 800045a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800045e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000460:	bf00      	nop
 8000462:	370c      	adds	r7, #12
 8000464:	46bd      	mov	sp, r7
 8000466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046a:	4770      	bx	lr
 800046c:	40020000 	.word	0x40020000
 8000470:	40023800 	.word	0x40023800
 8000474:	40020400 	.word	0x40020400
 8000478:	40020800 	.word	0x40020800
 800047c:	40020c00 	.word	0x40020c00
 8000480:	40021000 	.word	0x40021000
 8000484:	40021400 	.word	0x40021400
 8000488:	40021800 	.word	0x40021800
 800048c:	40021c00 	.word	0x40021c00

08000490 <GPIO_Init>:
 * @param *pGPIOHandle Pointer to GPIO handle
 *
 * @return void.
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000490:	b480      	push	{r7}
 8000492:	b087      	sub	sp, #28
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
  uint32_t temp = 0; // temp register
 8000498:	2300      	movs	r3, #0
 800049a:	617b      	str	r3, [r7, #20]
  
  //1. configure Gpio pin Mode (aula: 95)
  if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){ // look at the " GPIO pin possible mode" in this.h 0 to 3 are non interrupting modes
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	795b      	ldrb	r3, [r3, #5]
 80004a0:	2b03      	cmp	r3, #3
 80004a2:	d81f      	bhi.n	80004e4 <GPIO_Init+0x54>
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	795b      	ldrb	r3, [r3, #5]
 80004a8:	461a      	mov	r2, r3
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	005b      	lsls	r3, r3, #1
 80004b0:	fa02 f303 	lsl.w	r3, r2, r3
 80004b4:	617b      	str	r3, [r7, #20]
    pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	681a      	ldr	r2, [r3, #0]
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	4619      	mov	r1, r3
 80004c2:	2303      	movs	r3, #3
 80004c4:	408b      	lsls	r3, r1
 80004c6:	43db      	mvns	r3, r3
 80004c8:	4619      	mov	r1, r3
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	400a      	ands	r2, r1
 80004d0:	601a      	str	r2, [r3, #0]
    pGPIOHandle->pGPIOx->MODER |= temp; //setting
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	6819      	ldr	r1, [r3, #0]
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	697a      	ldr	r2, [r7, #20]
 80004de:	430a      	orrs	r2, r1
 80004e0:	601a      	str	r2, [r3, #0]
 80004e2:	e0c2      	b.n	800066a <GPIO_Init+0x1da>
  }
  else
  {
	  // for interrupt  mode
	  if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FT)
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	795b      	ldrb	r3, [r3, #5]
 80004e8:	2b04      	cmp	r3, #4
 80004ea:	d817      	bhi.n	800051c <GPIO_Init+0x8c>
	  {
		  //1. configure the FTSR
		  EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ec:	4b47      	ldr	r3, [pc, #284]	; (800060c <GPIO_Init+0x17c>)
 80004ee:	68db      	ldr	r3, [r3, #12]
 80004f0:	687a      	ldr	r2, [r7, #4]
 80004f2:	7912      	ldrb	r2, [r2, #4]
 80004f4:	4611      	mov	r1, r2
 80004f6:	2201      	movs	r2, #1
 80004f8:	408a      	lsls	r2, r1
 80004fa:	4611      	mov	r1, r2
 80004fc:	4a43      	ldr	r2, [pc, #268]	; (800060c <GPIO_Init+0x17c>)
 80004fe:	430b      	orrs	r3, r1
 8000500:	60d3      	str	r3, [r2, #12]
		  // clear the corresponding RTSR bit
		  EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000502:	4b42      	ldr	r3, [pc, #264]	; (800060c <GPIO_Init+0x17c>)
 8000504:	689b      	ldr	r3, [r3, #8]
 8000506:	687a      	ldr	r2, [r7, #4]
 8000508:	7912      	ldrb	r2, [r2, #4]
 800050a:	4611      	mov	r1, r2
 800050c:	2201      	movs	r2, #1
 800050e:	408a      	lsls	r2, r1
 8000510:	43d2      	mvns	r2, r2
 8000512:	4611      	mov	r1, r2
 8000514:	4a3d      	ldr	r2, [pc, #244]	; (800060c <GPIO_Init+0x17c>)
 8000516:	400b      	ands	r3, r1
 8000518:	6093      	str	r3, [r2, #8]
 800051a:	e035      	b.n	8000588 <GPIO_Init+0xf8>
	  }
	  else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT)
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	795b      	ldrb	r3, [r3, #5]
 8000520:	2b05      	cmp	r3, #5
 8000522:	d817      	bhi.n	8000554 <GPIO_Init+0xc4>
	  {
		  //1. configure the RTSR
		  EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000524:	4b39      	ldr	r3, [pc, #228]	; (800060c <GPIO_Init+0x17c>)
 8000526:	689b      	ldr	r3, [r3, #8]
 8000528:	687a      	ldr	r2, [r7, #4]
 800052a:	7912      	ldrb	r2, [r2, #4]
 800052c:	4611      	mov	r1, r2
 800052e:	2201      	movs	r2, #1
 8000530:	408a      	lsls	r2, r1
 8000532:	4611      	mov	r1, r2
 8000534:	4a35      	ldr	r2, [pc, #212]	; (800060c <GPIO_Init+0x17c>)
 8000536:	430b      	orrs	r3, r1
 8000538:	6093      	str	r3, [r2, #8]
		  // clear the corresponding FTSR bit
		  EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800053a:	4b34      	ldr	r3, [pc, #208]	; (800060c <GPIO_Init+0x17c>)
 800053c:	68db      	ldr	r3, [r3, #12]
 800053e:	687a      	ldr	r2, [r7, #4]
 8000540:	7912      	ldrb	r2, [r2, #4]
 8000542:	4611      	mov	r1, r2
 8000544:	2201      	movs	r2, #1
 8000546:	408a      	lsls	r2, r1
 8000548:	43d2      	mvns	r2, r2
 800054a:	4611      	mov	r1, r2
 800054c:	4a2f      	ldr	r2, [pc, #188]	; (800060c <GPIO_Init+0x17c>)
 800054e:	400b      	ands	r3, r1
 8000550:	60d3      	str	r3, [r2, #12]
 8000552:	e019      	b.n	8000588 <GPIO_Init+0xf8>
	  }
	  else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FRT)
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	795b      	ldrb	r3, [r3, #5]
 8000558:	2b06      	cmp	r3, #6
 800055a:	d815      	bhi.n	8000588 <GPIO_Init+0xf8>
	  {
		  //1. configure the FTSR
		  EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055c:	4b2b      	ldr	r3, [pc, #172]	; (800060c <GPIO_Init+0x17c>)
 800055e:	68db      	ldr	r3, [r3, #12]
 8000560:	687a      	ldr	r2, [r7, #4]
 8000562:	7912      	ldrb	r2, [r2, #4]
 8000564:	4611      	mov	r1, r2
 8000566:	2201      	movs	r2, #1
 8000568:	408a      	lsls	r2, r1
 800056a:	4611      	mov	r1, r2
 800056c:	4a27      	ldr	r2, [pc, #156]	; (800060c <GPIO_Init+0x17c>)
 800056e:	430b      	orrs	r3, r1
 8000570:	60d3      	str	r3, [r2, #12]
		  // and configure RTSR bit
		  EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000572:	4b26      	ldr	r3, [pc, #152]	; (800060c <GPIO_Init+0x17c>)
 8000574:	689b      	ldr	r3, [r3, #8]
 8000576:	687a      	ldr	r2, [r7, #4]
 8000578:	7912      	ldrb	r2, [r2, #4]
 800057a:	4611      	mov	r1, r2
 800057c:	2201      	movs	r2, #1
 800057e:	408a      	lsls	r2, r1
 8000580:	4611      	mov	r1, r2
 8000582:	4a22      	ldr	r2, [pc, #136]	; (800060c <GPIO_Init+0x17c>)
 8000584:	430b      	orrs	r3, r1
 8000586:	6093      	str	r3, [r2, #8]
	  }
	  // 2. Configure the GPIO port selection in SYSCFG_EXTICR
	  uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4; // (AULA:111)
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	791b      	ldrb	r3, [r3, #4]
 800058c:	089b      	lsrs	r3, r3, #2
 800058e:	74fb      	strb	r3, [r7, #19]
	  uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	f003 0303 	and.w	r3, r3, #3
 8000598:	74bb      	strb	r3, [r7, #18]
	  uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	4a1c      	ldr	r2, [pc, #112]	; (8000610 <GPIO_Init+0x180>)
 80005a0:	4293      	cmp	r3, r2
 80005a2:	d045      	beq.n	8000630 <GPIO_Init+0x1a0>
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	4a1a      	ldr	r2, [pc, #104]	; (8000614 <GPIO_Init+0x184>)
 80005aa:	4293      	cmp	r3, r2
 80005ac:	d02b      	beq.n	8000606 <GPIO_Init+0x176>
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	4a19      	ldr	r2, [pc, #100]	; (8000618 <GPIO_Init+0x188>)
 80005b4:	4293      	cmp	r3, r2
 80005b6:	d024      	beq.n	8000602 <GPIO_Init+0x172>
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a17      	ldr	r2, [pc, #92]	; (800061c <GPIO_Init+0x18c>)
 80005be:	4293      	cmp	r3, r2
 80005c0:	d01d      	beq.n	80005fe <GPIO_Init+0x16e>
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	4a16      	ldr	r2, [pc, #88]	; (8000620 <GPIO_Init+0x190>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d016      	beq.n	80005fa <GPIO_Init+0x16a>
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	4a14      	ldr	r2, [pc, #80]	; (8000624 <GPIO_Init+0x194>)
 80005d2:	4293      	cmp	r3, r2
 80005d4:	d00f      	beq.n	80005f6 <GPIO_Init+0x166>
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	4a13      	ldr	r2, [pc, #76]	; (8000628 <GPIO_Init+0x198>)
 80005dc:	4293      	cmp	r3, r2
 80005de:	d008      	beq.n	80005f2 <GPIO_Init+0x162>
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a11      	ldr	r2, [pc, #68]	; (800062c <GPIO_Init+0x19c>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d101      	bne.n	80005ee <GPIO_Init+0x15e>
 80005ea:	2307      	movs	r3, #7
 80005ec:	e021      	b.n	8000632 <GPIO_Init+0x1a2>
 80005ee:	2300      	movs	r3, #0
 80005f0:	e01f      	b.n	8000632 <GPIO_Init+0x1a2>
 80005f2:	2306      	movs	r3, #6
 80005f4:	e01d      	b.n	8000632 <GPIO_Init+0x1a2>
 80005f6:	2305      	movs	r3, #5
 80005f8:	e01b      	b.n	8000632 <GPIO_Init+0x1a2>
 80005fa:	2304      	movs	r3, #4
 80005fc:	e019      	b.n	8000632 <GPIO_Init+0x1a2>
 80005fe:	2303      	movs	r3, #3
 8000600:	e017      	b.n	8000632 <GPIO_Init+0x1a2>
 8000602:	2302      	movs	r3, #2
 8000604:	e015      	b.n	8000632 <GPIO_Init+0x1a2>
 8000606:	2301      	movs	r3, #1
 8000608:	e013      	b.n	8000632 <GPIO_Init+0x1a2>
 800060a:	bf00      	nop
 800060c:	40013c00 	.word	0x40013c00
 8000610:	40020000 	.word	0x40020000
 8000614:	40020400 	.word	0x40020400
 8000618:	40020800 	.word	0x40020800
 800061c:	40020c00 	.word	0x40020c00
 8000620:	40021000 	.word	0x40021000
 8000624:	40021400 	.word	0x40021400
 8000628:	40021800 	.word	0x40021800
 800062c:	40021c00 	.word	0x40021c00
 8000630:	2300      	movs	r3, #0
 8000632:	747b      	strb	r3, [r7, #17]
	  SYSCFG_PCLK_EN();
 8000634:	4b5d      	ldr	r3, [pc, #372]	; (80007ac <GPIO_Init+0x31c>)
 8000636:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000638:	4a5c      	ldr	r2, [pc, #368]	; (80007ac <GPIO_Init+0x31c>)
 800063a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800063e:	6453      	str	r3, [r2, #68]	; 0x44
	  SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000640:	7c7a      	ldrb	r2, [r7, #17]
 8000642:	7cbb      	ldrb	r3, [r7, #18]
 8000644:	009b      	lsls	r3, r3, #2
 8000646:	fa02 f103 	lsl.w	r1, r2, r3
 800064a:	4a59      	ldr	r2, [pc, #356]	; (80007b0 <GPIO_Init+0x320>)
 800064c:	7cfb      	ldrb	r3, [r7, #19]
 800064e:	3302      	adds	r3, #2
 8000650:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

	  // 3. enable the EXTI interrupt delivery using IMR
	  EXTI->IMR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000654:	4b57      	ldr	r3, [pc, #348]	; (80007b4 <GPIO_Init+0x324>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	687a      	ldr	r2, [r7, #4]
 800065a:	7912      	ldrb	r2, [r2, #4]
 800065c:	4611      	mov	r1, r2
 800065e:	2201      	movs	r2, #1
 8000660:	408a      	lsls	r2, r1
 8000662:	4611      	mov	r1, r2
 8000664:	4a53      	ldr	r2, [pc, #332]	; (80007b4 <GPIO_Init+0x324>)
 8000666:	430b      	orrs	r3, r1
 8000668:	6013      	str	r3, [r2, #0]

  }
  
  //2. configure speed
  temp = 0;
 800066a:	2300      	movs	r3, #0
 800066c:	617b      	str	r3, [r7, #20]
  temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	799b      	ldrb	r3, [r3, #6]
 8000672:	461a      	mov	r2, r3
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	791b      	ldrb	r3, [r3, #4]
 8000678:	005b      	lsls	r3, r3, #1
 800067a:	fa02 f303 	lsl.w	r3, r2, r3
 800067e:	617b      	str	r3, [r7, #20]
  pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	689a      	ldr	r2, [r3, #8]
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	791b      	ldrb	r3, [r3, #4]
 800068a:	4619      	mov	r1, r3
 800068c:	2303      	movs	r3, #3
 800068e:	408b      	lsls	r3, r1
 8000690:	43db      	mvns	r3, r3
 8000692:	4619      	mov	r1, r3
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	400a      	ands	r2, r1
 800069a:	609a      	str	r2, [r3, #8]
  pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	6899      	ldr	r1, [r3, #8]
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	697a      	ldr	r2, [r7, #20]
 80006a8:	430a      	orrs	r2, r1
 80006aa:	609a      	str	r2, [r3, #8]
  
  //3. configure popup popdown setting
  temp = 0;
 80006ac:	2300      	movs	r3, #0
 80006ae:	617b      	str	r3, [r7, #20]
  temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	79db      	ldrb	r3, [r3, #7]
 80006b4:	461a      	mov	r2, r3
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	791b      	ldrb	r3, [r3, #4]
 80006ba:	005b      	lsls	r3, r3, #1
 80006bc:	fa02 f303 	lsl.w	r3, r2, r3
 80006c0:	617b      	str	r3, [r7, #20]
  pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);  
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	68da      	ldr	r2, [r3, #12]
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	791b      	ldrb	r3, [r3, #4]
 80006cc:	4619      	mov	r1, r3
 80006ce:	2303      	movs	r3, #3
 80006d0:	408b      	lsls	r3, r1
 80006d2:	43db      	mvns	r3, r3
 80006d4:	4619      	mov	r1, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	400a      	ands	r2, r1
 80006dc:	60da      	str	r2, [r3, #12]
  pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	68d9      	ldr	r1, [r3, #12]
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	697a      	ldr	r2, [r7, #20]
 80006ea:	430a      	orrs	r2, r1
 80006ec:	60da      	str	r2, [r3, #12]
    
  //4. configure optype
  temp = 0;
 80006ee:	2300      	movs	r3, #0
 80006f0:	617b      	str	r3, [r7, #20]
  temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	7a1b      	ldrb	r3, [r3, #8]
 80006f6:	461a      	mov	r2, r3
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	791b      	ldrb	r3, [r3, #4]
 80006fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000700:	617b      	str	r3, [r7, #20]
  pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	685a      	ldr	r2, [r3, #4]
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	791b      	ldrb	r3, [r3, #4]
 800070c:	4619      	mov	r1, r3
 800070e:	2301      	movs	r3, #1
 8000710:	408b      	lsls	r3, r1
 8000712:	43db      	mvns	r3, r3
 8000714:	4619      	mov	r1, r3
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	400a      	ands	r2, r1
 800071c:	605a      	str	r2, [r3, #4]
  pGPIOHandle->pGPIOx->OTYPER |= temp;
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	6859      	ldr	r1, [r3, #4]
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	697a      	ldr	r2, [r7, #20]
 800072a:	430a      	orrs	r2, r1
 800072c:	605a      	str	r2, [r3, #4]
  
  //5. configure alternate functionality
  temp = 0;
 800072e:	2300      	movs	r3, #0
 8000730:	617b      	str	r3, [r7, #20]
  if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ALTFN)
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	795b      	ldrb	r3, [r3, #5]
 8000736:	2b02      	cmp	r3, #2
 8000738:	d831      	bhi.n	800079e <GPIO_Init+0x30e>
  {
    uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	791b      	ldrb	r3, [r3, #4]
 800073e:	08db      	lsrs	r3, r3, #3
 8000740:	743b      	strb	r3, [r7, #16]
    uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	791b      	ldrb	r3, [r3, #4]
 8000746:	f003 0307 	and.w	r3, r3, #7
 800074a:	73fb      	strb	r3, [r7, #15]
    pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	7c3a      	ldrb	r2, [r7, #16]
 8000752:	3208      	adds	r2, #8
 8000754:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000758:	7bfb      	ldrb	r3, [r7, #15]
 800075a:	009b      	lsls	r3, r3, #2
 800075c:	220f      	movs	r2, #15
 800075e:	fa02 f303 	lsl.w	r3, r2, r3
 8000762:	43db      	mvns	r3, r3
 8000764:	4618      	mov	r0, r3
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	7c3a      	ldrb	r2, [r7, #16]
 800076c:	4001      	ands	r1, r0
 800076e:	3208      	adds	r2, #8
 8000770:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2) );
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	7c3a      	ldrb	r2, [r7, #16]
 800077a:	3208      	adds	r2, #8
 800077c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	7a5b      	ldrb	r3, [r3, #9]
 8000784:	461a      	mov	r2, r3
 8000786:	7bfb      	ldrb	r3, [r7, #15]
 8000788:	009b      	lsls	r3, r3, #2
 800078a:	fa02 f303 	lsl.w	r3, r2, r3
 800078e:	4618      	mov	r0, r3
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	7c3a      	ldrb	r2, [r7, #16]
 8000796:	4301      	orrs	r1, r0
 8000798:	3208      	adds	r2, #8
 800079a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  }
}
 800079e:	bf00      	nop
 80007a0:	371c      	adds	r7, #28
 80007a2:	46bd      	mov	sp, r7
 80007a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007a8:	4770      	bx	lr
 80007aa:	bf00      	nop
 80007ac:	40023800 	.word	0x40023800
 80007b0:	40013800 	.word	0x40013800
 80007b4:	40013c00 	.word	0x40013c00

080007b8 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t value){

	pGPIOx->ODR = value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80007b8:	b480      	push	{r7}
 80007ba:	b083      	sub	sp, #12
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
 80007c0:	460b      	mov	r3, r1
 80007c2:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1 << PinNumber);
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	695b      	ldr	r3, [r3, #20]
 80007c8:	78fa      	ldrb	r2, [r7, #3]
 80007ca:	2101      	movs	r1, #1
 80007cc:	fa01 f202 	lsl.w	r2, r1, r2
 80007d0:	405a      	eors	r2, r3
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	615a      	str	r2, [r3, #20]
}
 80007d6:	bf00      	nop
 80007d8:	370c      	adds	r7, #12
 80007da:	46bd      	mov	sp, r7
 80007dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e0:	4770      	bx	lr
	...

080007e4 <GPIO_IRQInterruptConfig>:

/*
* IRQ configuration and ISR handling
*/
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t ENorDI){
 80007e4:	b480      	push	{r7}
 80007e6:	b083      	sub	sp, #12
 80007e8:	af00      	add	r7, sp, #0
 80007ea:	4603      	mov	r3, r0
 80007ec:	460a      	mov	r2, r1
 80007ee:	71fb      	strb	r3, [r7, #7]
 80007f0:	4613      	mov	r3, r2
 80007f2:	71bb      	strb	r3, [r7, #6]
	if (ENorDI == ENABLE)
 80007f4:	79bb      	ldrb	r3, [r7, #6]
 80007f6:	2b01      	cmp	r3, #1
 80007f8:	d133      	bne.n	8000862 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 80007fa:	79fb      	ldrb	r3, [r7, #7]
 80007fc:	2b1f      	cmp	r3, #31
 80007fe:	d80a      	bhi.n	8000816 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 8000800:	4b35      	ldr	r3, [pc, #212]	; (80008d8 <GPIO_IRQInterruptConfig+0xf4>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	79fa      	ldrb	r2, [r7, #7]
 8000806:	2101      	movs	r1, #1
 8000808:	fa01 f202 	lsl.w	r2, r1, r2
 800080c:	4611      	mov	r1, r2
 800080e:	4a32      	ldr	r2, [pc, #200]	; (80008d8 <GPIO_IRQInterruptConfig+0xf4>)
 8000810:	430b      	orrs	r3, r1
 8000812:	6013      	str	r3, [r2, #0]
				{
					//program ICER2 register //64 to 95
					*NVIC_ICER2 |= ( 1 << IRQNumber % 64 );
				}
	}
}
 8000814:	e059      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		else if (IRQNumber > 31 && IRQNumber < 64)
 8000816:	79fb      	ldrb	r3, [r7, #7]
 8000818:	2b1f      	cmp	r3, #31
 800081a:	d90f      	bls.n	800083c <GPIO_IRQInterruptConfig+0x58>
 800081c:	79fb      	ldrb	r3, [r7, #7]
 800081e:	2b3f      	cmp	r3, #63	; 0x3f
 8000820:	d80c      	bhi.n	800083c <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= ( 1 << IRQNumber % 32 );
 8000822:	4b2e      	ldr	r3, [pc, #184]	; (80008dc <GPIO_IRQInterruptConfig+0xf8>)
 8000824:	681b      	ldr	r3, [r3, #0]
 8000826:	79fa      	ldrb	r2, [r7, #7]
 8000828:	f002 021f 	and.w	r2, r2, #31
 800082c:	2101      	movs	r1, #1
 800082e:	fa01 f202 	lsl.w	r2, r1, r2
 8000832:	4611      	mov	r1, r2
 8000834:	4a29      	ldr	r2, [pc, #164]	; (80008dc <GPIO_IRQInterruptConfig+0xf8>)
 8000836:	430b      	orrs	r3, r1
 8000838:	6013      	str	r3, [r2, #0]
 800083a:	e046      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		else if (IRQNumber >= 64 && IRQNumber < 96)
 800083c:	79fb      	ldrb	r3, [r7, #7]
 800083e:	2b3f      	cmp	r3, #63	; 0x3f
 8000840:	d943      	bls.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 8000842:	79fb      	ldrb	r3, [r7, #7]
 8000844:	2b5f      	cmp	r3, #95	; 0x5f
 8000846:	d840      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= ( 1 << IRQNumber % 64 );
 8000848:	4b25      	ldr	r3, [pc, #148]	; (80008e0 <GPIO_IRQInterruptConfig+0xfc>)
 800084a:	681b      	ldr	r3, [r3, #0]
 800084c:	79fa      	ldrb	r2, [r7, #7]
 800084e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000852:	2101      	movs	r1, #1
 8000854:	fa01 f202 	lsl.w	r2, r1, r2
 8000858:	4611      	mov	r1, r2
 800085a:	4a21      	ldr	r2, [pc, #132]	; (80008e0 <GPIO_IRQInterruptConfig+0xfc>)
 800085c:	430b      	orrs	r3, r1
 800085e:	6013      	str	r3, [r2, #0]
}
 8000860:	e033      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000862:	79fb      	ldrb	r3, [r7, #7]
 8000864:	2b1f      	cmp	r3, #31
 8000866:	d80a      	bhi.n	800087e <GPIO_IRQInterruptConfig+0x9a>
					*NVIC_ICER0 |= ( 1 << IRQNumber );
 8000868:	4b1e      	ldr	r3, [pc, #120]	; (80008e4 <GPIO_IRQInterruptConfig+0x100>)
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	79fa      	ldrb	r2, [r7, #7]
 800086e:	2101      	movs	r1, #1
 8000870:	fa01 f202 	lsl.w	r2, r1, r2
 8000874:	4611      	mov	r1, r2
 8000876:	4a1b      	ldr	r2, [pc, #108]	; (80008e4 <GPIO_IRQInterruptConfig+0x100>)
 8000878:	430b      	orrs	r3, r1
 800087a:	6013      	str	r3, [r2, #0]
}
 800087c:	e025      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
				else if (IRQNumber > 31 && IRQNumber < 64)
 800087e:	79fb      	ldrb	r3, [r7, #7]
 8000880:	2b1f      	cmp	r3, #31
 8000882:	d90f      	bls.n	80008a4 <GPIO_IRQInterruptConfig+0xc0>
 8000884:	79fb      	ldrb	r3, [r7, #7]
 8000886:	2b3f      	cmp	r3, #63	; 0x3f
 8000888:	d80c      	bhi.n	80008a4 <GPIO_IRQInterruptConfig+0xc0>
					*NVIC_ICER1 |= ( 1 << IRQNumber % 32 );
 800088a:	4b17      	ldr	r3, [pc, #92]	; (80008e8 <GPIO_IRQInterruptConfig+0x104>)
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	79fa      	ldrb	r2, [r7, #7]
 8000890:	f002 021f 	and.w	r2, r2, #31
 8000894:	2101      	movs	r1, #1
 8000896:	fa01 f202 	lsl.w	r2, r1, r2
 800089a:	4611      	mov	r1, r2
 800089c:	4a12      	ldr	r2, [pc, #72]	; (80008e8 <GPIO_IRQInterruptConfig+0x104>)
 800089e:	430b      	orrs	r3, r1
 80008a0:	6013      	str	r3, [r2, #0]
 80008a2:	e012      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
				else if (IRQNumber >= 64 && IRQNumber < 96)
 80008a4:	79fb      	ldrb	r3, [r7, #7]
 80008a6:	2b3f      	cmp	r3, #63	; 0x3f
 80008a8:	d90f      	bls.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 80008aa:	79fb      	ldrb	r3, [r7, #7]
 80008ac:	2b5f      	cmp	r3, #95	; 0x5f
 80008ae:	d80c      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
					*NVIC_ICER2 |= ( 1 << IRQNumber % 64 );
 80008b0:	4b0e      	ldr	r3, [pc, #56]	; (80008ec <GPIO_IRQInterruptConfig+0x108>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	79fa      	ldrb	r2, [r7, #7]
 80008b6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008ba:	2101      	movs	r1, #1
 80008bc:	fa01 f202 	lsl.w	r2, r1, r2
 80008c0:	4611      	mov	r1, r2
 80008c2:	4a0a      	ldr	r2, [pc, #40]	; (80008ec <GPIO_IRQInterruptConfig+0x108>)
 80008c4:	430b      	orrs	r3, r1
 80008c6:	6013      	str	r3, [r2, #0]
}
 80008c8:	e7ff      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 80008ca:	bf00      	nop
 80008cc:	370c      	adds	r7, #12
 80008ce:	46bd      	mov	sp, r7
 80008d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d4:	4770      	bx	lr
 80008d6:	bf00      	nop
 80008d8:	e000e100 	.word	0xe000e100
 80008dc:	e000e104 	.word	0xe000e104
 80008e0:	e000e108 	.word	0xe000e108
 80008e4:	e000e180 	.word	0xe000e180
 80008e8:	e000e184 	.word	0xe000e184
 80008ec:	e000e188 	.word	0xe000e188

080008f0 <GPIO_IRQPriorityConfig>:


void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 80008f0:	b480      	push	{r7}
 80008f2:	b085      	sub	sp, #20
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	4603      	mov	r3, r0
 80008f8:	6039      	str	r1, [r7, #0]
 80008fa:	71fb      	strb	r3, [r7, #7]
	//1. lets find out the ipr regsiter
	uint8_t iprx = IRQNumber / 4;
 80008fc:	79fb      	ldrb	r3, [r7, #7]
 80008fe:	089b      	lsrs	r3, r3, #2
 8000900:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000902:	79fb      	ldrb	r3, [r7, #7]
 8000904:	f003 0303 	and.w	r3, r3, #3
 8000908:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = ( 8 * iprx_section ) + (8 - NO_PR_BITS_IMPLEMENTED);
 800090a:	7bbb      	ldrb	r3, [r7, #14]
 800090c:	00db      	lsls	r3, r3, #3
 800090e:	b2db      	uxtb	r3, r3
 8000910:	3304      	adds	r3, #4
 8000912:	737b      	strb	r3, [r7, #13]

	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000914:	7bfb      	ldrb	r3, [r7, #15]
 8000916:	009b      	lsls	r3, r3, #2
 8000918:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800091c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000920:	6819      	ldr	r1, [r3, #0]
 8000922:	7b7b      	ldrb	r3, [r7, #13]
 8000924:	683a      	ldr	r2, [r7, #0]
 8000926:	409a      	lsls	r2, r3
 8000928:	7bfb      	ldrb	r3, [r7, #15]
 800092a:	009b      	lsls	r3, r3, #2
 800092c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000930:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000934:	430a      	orrs	r2, r1
 8000936:	601a      	str	r2, [r3, #0]
}
 8000938:	bf00      	nop
 800093a:	3714      	adds	r7, #20
 800093c:	46bd      	mov	sp, r7
 800093e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000942:	4770      	bx	lr

08000944 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber){
 8000944:	b480      	push	{r7}
 8000946:	b083      	sub	sp, #12
 8000948:	af00      	add	r7, sp, #0
 800094a:	4603      	mov	r3, r0
 800094c:	71fb      	strb	r3, [r7, #7]
	// clear the exti pr register corresponding to the pin number
	if (EXTI->PR & (1 << PinNumber))
 800094e:	4b0c      	ldr	r3, [pc, #48]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000950:	695b      	ldr	r3, [r3, #20]
 8000952:	79fa      	ldrb	r2, [r7, #7]
 8000954:	2101      	movs	r1, #1
 8000956:	fa01 f202 	lsl.w	r2, r1, r2
 800095a:	4013      	ands	r3, r2
 800095c:	2b00      	cmp	r3, #0
 800095e:	d009      	beq.n	8000974 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= (1 << PinNumber);
 8000960:	4b07      	ldr	r3, [pc, #28]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000962:	695b      	ldr	r3, [r3, #20]
 8000964:	79fa      	ldrb	r2, [r7, #7]
 8000966:	2101      	movs	r1, #1
 8000968:	fa01 f202 	lsl.w	r2, r1, r2
 800096c:	4611      	mov	r1, r2
 800096e:	4a04      	ldr	r2, [pc, #16]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000970:	430b      	orrs	r3, r1
 8000972:	6153      	str	r3, [r2, #20]
	}
}
 8000974:	bf00      	nop
 8000976:	370c      	adds	r7, #12
 8000978:	46bd      	mov	sp, r7
 800097a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800097e:	4770      	bx	lr
 8000980:	40013c00 	.word	0x40013c00

08000984 <__libc_init_array>:
 8000984:	b570      	push	{r4, r5, r6, lr}
 8000986:	4d0d      	ldr	r5, [pc, #52]	; (80009bc <__libc_init_array+0x38>)
 8000988:	4c0d      	ldr	r4, [pc, #52]	; (80009c0 <__libc_init_array+0x3c>)
 800098a:	1b64      	subs	r4, r4, r5
 800098c:	10a4      	asrs	r4, r4, #2
 800098e:	2600      	movs	r6, #0
 8000990:	42a6      	cmp	r6, r4
 8000992:	d109      	bne.n	80009a8 <__libc_init_array+0x24>
 8000994:	4d0b      	ldr	r5, [pc, #44]	; (80009c4 <__libc_init_array+0x40>)
 8000996:	4c0c      	ldr	r4, [pc, #48]	; (80009c8 <__libc_init_array+0x44>)
 8000998:	f000 f820 	bl	80009dc <_init>
 800099c:	1b64      	subs	r4, r4, r5
 800099e:	10a4      	asrs	r4, r4, #2
 80009a0:	2600      	movs	r6, #0
 80009a2:	42a6      	cmp	r6, r4
 80009a4:	d105      	bne.n	80009b2 <__libc_init_array+0x2e>
 80009a6:	bd70      	pop	{r4, r5, r6, pc}
 80009a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80009ac:	4798      	blx	r3
 80009ae:	3601      	adds	r6, #1
 80009b0:	e7ee      	b.n	8000990 <__libc_init_array+0xc>
 80009b2:	f855 3b04 	ldr.w	r3, [r5], #4
 80009b6:	4798      	blx	r3
 80009b8:	3601      	adds	r6, #1
 80009ba:	e7f2      	b.n	80009a2 <__libc_init_array+0x1e>
 80009bc:	080009f4 	.word	0x080009f4
 80009c0:	080009f4 	.word	0x080009f4
 80009c4:	080009f4 	.word	0x080009f4
 80009c8:	080009f8 	.word	0x080009f8

080009cc <memset>:
 80009cc:	4402      	add	r2, r0
 80009ce:	4603      	mov	r3, r0
 80009d0:	4293      	cmp	r3, r2
 80009d2:	d100      	bne.n	80009d6 <memset+0xa>
 80009d4:	4770      	bx	lr
 80009d6:	f803 1b01 	strb.w	r1, [r3], #1
 80009da:	e7f9      	b.n	80009d0 <memset+0x4>

080009dc <_init>:
 80009dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009de:	bf00      	nop
 80009e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009e2:	bc08      	pop	{r3}
 80009e4:	469e      	mov	lr, r3
 80009e6:	4770      	bx	lr

080009e8 <_fini>:
 80009e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ea:	bf00      	nop
 80009ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009ee:	bc08      	pop	{r3}
 80009f0:	469e      	mov	lr, r3
 80009f2:	4770      	bx	lr
